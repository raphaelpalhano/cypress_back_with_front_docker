<?xml version="1.0" encoding="utf-8" ?>
<TrustFrameworkPolicy 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" 
  PolicySchemaVersion="0.3.0.0" 
  TenantId="iguateste.onmicrosoft.com" 
  PolicyId="B2C_1A_ForcePasswordReset_TrustFrameworkExtensions" 
  PublicPolicyUri="http://iguateste.onmicrosoft.com/B2C_1A_ForcePasswordReset_TrustFrameworkExtensions">
  
  <BasePolicy>
    <TenantId>iguateste.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkBase</PolicyId>
  </BasePolicy>
  <BuildingBlocks>
  <ClaimsSchema>
    <!--Demo: Specifies whether user must reset the password-->
  	<ClaimType Id="extension_mustResetPassword">
	    <DisplayName>Must reset password</DisplayName>
	    <DataType>boolean</DataType>
	    <UserHelpText>Specifies whether user must reset the password</UserHelpText>
	  </ClaimType>

  	<ClaimType Id="extension_portalId">
	    <DisplayName>Portal Id</DisplayName>
	    <DataType>int</DataType>
	    <UserHelpText>DNN Portal Id</UserHelpText>
	  </ClaimType>        
  </ClaimsSchema>
  <ClaimsTransformations>
	<ClaimsTransformation Id="GetFirstOtherMail" TransformationMethod="GetSingleItemFromStringCollection">
		<InputClaims>
		  <InputClaim ClaimTypeReferenceId="otherMails" TransformationClaimType="collection" />
		</InputClaims>
		<OutputClaims>
		  <OutputClaim ClaimTypeReferenceId="firstOtherMail" TransformationClaimType="extractedItem" />
		</OutputClaims>
	  </ClaimsTransformation>

	  <ClaimsTransformation Id="CopyFirstOtherMailToEmail" TransformationMethod="AddItemToStringCollection">
		<InputClaims>
		  <InputClaim ClaimTypeReferenceId="firstOtherMail" TransformationClaimType="item" />
		  <InputClaim ClaimTypeReferenceId="emails" TransformationClaimType="collection" />
		</InputClaims>
		<OutputClaims>
		  <OutputClaim ClaimTypeReferenceId="emails" TransformationClaimType="collection" />
		</OutputClaims>
	  </ClaimsTransformation>

	  <ClaimsTransformation Id="CopySignInNamesEmailToEmails" TransformationMethod="AddItemToStringCollection">
		<InputClaims>
		  <InputClaim ClaimTypeReferenceId="signInNames.emailAddress" TransformationClaimType="item" />
		  <InputClaim ClaimTypeReferenceId="emails" TransformationClaimType="collection" />
		</InputClaims>
		<OutputClaims>
		  <OutputClaim ClaimTypeReferenceId="emails" TransformationClaimType="collection" />
		</OutputClaims>
	  </ClaimsTransformation>  
  </ClaimsTransformations>
  </BuildingBlocks>

  <ClaimsProviders>
   <ClaimsProvider>
      <DisplayName>Azure Active Directory</DisplayName>
      <TechnicalProfiles>  
        <TechnicalProfile Id="AAD-Common">
          <DisplayName>Azure Active Directory</DisplayName>
          <!--  Demo action required: Provide objectId and appId before using extension properties.
                For more information: https://docs.microsoft.com/en-us/azure/active-directory-b2c/active-directory-b2c-create-custom-attributes-profile-edit-custom 
                Action required: Insert objectId and appId here -->
          <Metadata>
            <Item Key="ApplicationObjectId">4b18d4e5-cfe6-492c-bd75-dad129233d25</Item>
            <Item Key="ClientId">a5a58118-cd3c-4a65-917c-e901c976a4cd</Item>
          </Metadata>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
          </PersistedClaims>          
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserReadUsingObjectId">
          <OutputClaims>
            <!--Demo: Read the 'must reset password' extension attribute -->
            <OutputClaim ClaimTypeReferenceId="extension_mustResetPassword" />
            <OutputClaim ClaimTypeReferenceId="extension_portalId" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserRemoveMustResetPasswordUsingObjectId">
          <Metadata>
            <Item Key="Operation">DeleteClaims</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="extension_mustResetPassword" />            
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <!--Demo: to create the extension attribute extension_mustResetPassword, you should upload the policy 
            and create one account. Then ***comment out this technical profile***.
            -->
        <!--<TechnicalProfile Id="AAD-UserWriteUsingLogonEmail">
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="extension_mustResetPassword" DefaultValue="true" />
            <PersistedClaim ClaimTypeReferenceId="extension_portalId" DefaultValue="0" />
          </PersistedClaims>
        </TechnicalProfile>-->

<!-- The following technical profile is used to create the emails collection after user authenticates. -->
		<TechnicalProfile Id="AAD-UserCreateEmailsClaim">
		  <Metadata>
			<Item Key="Operation">Read</Item>
			<Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
		  </Metadata>
		  <IncludeInSso>false</IncludeInSso>
		  <InputClaims>
			<InputClaim ClaimTypeReferenceId="objectId" Required="true" />
		  </InputClaims>
		  <OutputClaims>
			<OutputClaim ClaimTypeReferenceId="signInNames.emailAddress" />
			<OutputClaim ClaimTypeReferenceId="otherMails" />
		  </OutputClaims>
		  <OutputClaimsTransformations>
			<OutputClaimsTransformation ReferenceId="GetFirstOtherMail"/>
			<OutputClaimsTransformation ReferenceId="CopySignInNamesEmailToEmails"/>
			<OutputClaimsTransformation ReferenceId="CopyFirstOtherMailToEmail"/>
		  </OutputClaimsTransformations>
		  <IncludeTechnicalProfile ReferenceId="AAD-Common" />
		</TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <!-- Local account Sign-In claims provider -->
    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="login-NonInteractive">
          <Metadata>
            <!--Demo action required: Change to your ProxyIdentityExperienceFramework App Id-->
            <Item Key="client_id">ad73a0fc-6582-45a5-b608-c1e0c98dc3ff</Item>
            <Item Key="IdTokenAudience">b5c31ef8-c4b2-40ec-b497-48a2057c4314</Item>
          </Metadata>
          <InputClaims>
            <!--Demo action required: Change to your ProxyIdentityExperienceFramework App Id-->
            <InputClaim ClaimTypeReferenceId="client_id" DefaultValue="ad73a0fc-6582-45a5-b608-c1e0c98dc3ff" />
            <!--Demo action required: Change to your IdentityExperienceFramework App Id-->
            <InputClaim ClaimTypeReferenceId="resource_id" PartnerClaimType="resource" DefaultValue="b5c31ef8-c4b2-40ec-b497-48a2057c4314" />
          </InputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>



  </ClaimsProviders>

  <UserJourneys>
    <UserJourney Id="SignInWithForcePasswordReset">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection ValidationClaimsExchangeId="LocalAccountSigninEmailExchange" />
          </ClaimsProviderSelections>
          <ClaimsExchanges>
            <ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountSignin-Email" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- This step reads any user attributes that we may not have received when authenticating using ESTS so they can be sent 
          in the token. -->
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>     

        <!--Demo: check if change password is required. If yes, ask the user to reset the password-->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>extension_mustResetPassword</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>            
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>extension_mustResetPassword</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>      
          </Preconditions>       
          <ClaimsExchanges>
            <ClaimsExchange Id="NewCredentials" TechnicalProfileReferenceId="LocalAccountWritePasswordUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

          <!--Demo: check if change password is required. If yes remove the value of the extension attribute. 
              So, on the next time user dons' t need to update the password-->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>extension_mustResetPassword</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>            
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>extension_mustResetPassword</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>            
          </Preconditions>        
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserRemoveMustResetPasswordUsingObjectId" TechnicalProfileReferenceId="AAD-UserRemoveMustResetPasswordUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- This step adds the emails claim -->
        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserCreateEmailsClaim" TechnicalProfileReferenceId="AAD-UserCreateEmailsClaim" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="6" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
 
      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>
  </UserJourneys>

</TrustFrameworkPolicy>