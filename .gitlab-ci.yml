image: docker:19.03.12
services:
  - docker:19.03.12-dind


stages:
  - build
  - test          
  - deploy

#workflow:
#  rules:
#    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || "main" && $CI_COMMIT_REF_NAME == "feature" || "release" && $CI_PIPELINE_SOURCE == "merge_request_event"'
#    - if: $CI_MERGE_REQUEST_APPROVED


variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest


build-job:      
  stage: build
  script:
    - echo $azure_auth >> .env
    - echo $user_auth >> cypress.env.json  
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
   
  


e2e-test-job:
  stage: test
  image: node:16.15.1
  services:
    - docker:19.03.12
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker run -d -p 4000:4000 $CONTAINER_TEST_IMAGE
    - apt-get update && apt-get install --yes libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
    - npm install
    - npm run cy:run



deploy-job:       # This job runs in the build stage, which runs first.
  stage: deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_COMMIT_REF_NAME == "release" && $CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_MERGE_REQUEST_APPROVED
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
    - node --version
  when: on_success

